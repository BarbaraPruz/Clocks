{"version":3,"sources":["components/digitalClock.js","components/clock.js","components/addclockform.js","App.js","index.js"],"names":["DigitalClock","timeFields","className","hour","minute","slice","month","day","year","timezone","Clock","id","deleteCallback","getFields","t","date","tz","useState","moment","updateTimeFields","useEffect","timer","window","setInterval","clearInterval","type","onClick","defaultProps","guess","AddClockForm","handleAddClock","timezones","storeTimezones","selectedZone","setZone","selectedRegion","setRegion","showForm","setShowForm","momentTz","names","tzlist","i","getRegion","substr","indexOf","length","currentRegion","push","buildTimezoneList","handleRegionChange","event","region","target","value","handleZoneChange","toggleForm","handleSubmit","preventDefault","zone","onSubmit","onChange","defaultValue","Object","keys","map","r","key","opt","App","getUniqueId","Date","getTime","toString","useReducer","stateClocks","action","payload","filter","c","clocks","dispatch","deleteClock","clockParams","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dc72b4a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DigitalClock = ({ timeFields }) => (\n  <div className=\"clock digital-clock\">\n    <div className=\"time\">\n      {timeFields.hour}\n      :\n      {(`0${timeFields.minute}`).slice(-2)}\n    </div>\n    <div className=\"date\">\n      {timeFields.month}\n      /\n      {timeFields.day}\n      /\n      {timeFields.year}\n    </div>\n    <div className=\"timezone\">\n      {timeFields.timezone}\n    </div>\n  </div>\n);\n\nDigitalClock.propTypes = {\n  timeFields: PropTypes.shape({\n    hour: PropTypes.number,\n    minute: PropTypes.number,\n    month: PropTypes.number,\n    day: PropTypes.number,\n    year: PropTypes.number,\n    timezone: PropTypes.string,\n  }).isRequired,\n};\nexport default DigitalClock;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport 'moment-timezone';\n\nimport DigitalClock from './digitalClock';\n\nfunction Clock({ timezone, id, deleteCallback }) {\n  function now() { return moment.tz(moment(), timezone);}\n\n  const getFields = (t) => ( // return hash of formatted time fields for a moment\n    {\n      year: t.year(),\n      month: t.month() + 1,\n      day: t.date(),\n      hour: t.hour(),\n      minute: t.minute(),\n      timezone: t.tz(),\n    }\n  );\n\n  const [timeFields, updateTimeFields] = useState(getFields(now()));\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      updateTimeFields({ ...getFields(moment.tz(moment(), timezone)) });\n    }, 60000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timezone]);\n\n  return (\n    <div className=\"clock-container\">\n      <button type=\"button\" className=\"clock-btn\" onClick={() => deleteCallback(id)}>\n        <i className=\"fa fa-close\" />\n      </button>\n      <DigitalClock timeFields={timeFields} />\n    </div>\n  );\n}\n\nClock.defaultProps = {\n  timezone: moment.tz.guess(),\n};\n\nClock.propTypes = {\n  timezone: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  deleteCallback: PropTypes.func.isRequired,\n};\n\nexport default Clock;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport 'moment-timezone';\n\nfunction AddClockForm({ handleAddClock }) {\n  const [timezones, storeTimezones] = useState(null);\n  const [selectedZone, setZone] = useState('Pacific');\n  const [selectedRegion, setRegion] = useState('US');\n  const [showForm, setShowForm] = useState(false);\n\n  function buildTimezoneList() {\n    const tz = moment.tz.names();\n    const tzlist = {};\n    let i = 0;\n\n    // get timezone name list and process\n    //   output is hash where each key is a region (ex. Africa) and value is array of timezones\n    function getRegion(momentTz) {\n      return momentTz.substr(0, momentTz.indexOf('/'));\n    }\n    function getName(momentTz) {\n      return momentTz.substr(momentTz.indexOf('/') + 1);\n    }\n\n    while (i < tz.length) {\n      const currentRegion = getRegion(tz[i]);\n      if (!currentRegion) { ++i; } else { // eslint-disable-line no-plusplus\n        const names = [];\n        while ((getRegion(tz[i]) === currentRegion) && (i < tz.length)) {\n          names.push(getName(tz[i]));\n          ++i; // eslint-disable-line no-plusplus\n        }\n        tzlist[currentRegion] = names;\n      }\n    }\n\n    return tzlist;\n  }\n\n  // setting up the timezone list (based on what moment.tz lib will support)\n  useEffect(() => {\n    storeTimezones(buildTimezoneList());\n  }, []);\n\n  // form event handlers\n  const handleRegionChange = (event) => {\n    const region = event.target.value;\n    setRegion(region);\n    setZone(timezones[region][0]);\n  };\n\n  const handleZoneChange = (event) => setZone(event.target.value);\n\n  const toggleForm = () => setShowForm(!showForm);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAddClock({ region: selectedRegion, zone: selectedZone });\n    toggleForm();\n  };\n\n  // helper functions for rendering component\n  const getForm = () => (\n    <form onSubmit={handleSubmit}>\n      <select id=\"region\" onChange={handleRegionChange} defaultValue={selectedRegion} className=\"rounded\">\n        {Object.keys(timezones).map((r) => <option key={r}>{r}</option>)}\n      </select>\n      <select id=\"zone\" onChange={handleZoneChange} defaultValue={selectedZone} className=\"rounded\">\n        {timezones[selectedRegion].map((opt) => <option key={`${opt}`}>{opt}</option>)}\n      </select>\n      <input type=\"submit\" value=\"Add Clock\" />\n    </form>\n  );\n\n  const getButton = () => <button type=\"button\" onClick={toggleForm}>Add Clock</button>;\n\n  return (\n    <div className=\"AddClockForm\">\n      { showForm ? getForm() : getButton()}\n    </div>\n  );\n}\n\nAddClockForm.propTypes = {\n  handleAddClock: PropTypes.func.isRequired,\n};\n\nexport default AddClockForm;\n","import React, { useReducer } from 'react';\n\nimport './App.css';\n\nimport Clock from './components/clock';\nimport AddClockForm from './components/addclockform';\n\nfunction App() {\n  const getUniqueId = () => new Date().getTime().toString(16);\n\n  const [clocks, dispatch] = useReducer((stateClocks, action) => {\n    let newState;\n    switch (action.type) {\n      case 'add':\n        return [\n          ...stateClocks,\n          { timezone: `${action.payload.region}/${action.payload.zone}`, id: getUniqueId() },\n        ];\n      case 'delete':\n        newState = stateClocks.filter((c) => c.id !== action.payload.id);\n        return newState;\n      default:\n        return stateClocks;\n    }\n  }, [{ timezone: null, id: getUniqueId() }]);\n\n  const addClock = (clockParams) => {\n    dispatch({ type: 'add', payload: { region: clockParams.region, zone: clockParams.zone } });\n  };\n\n  const deleteClock = (id) => {\n    dispatch({ type: 'delete', payload: { id } });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>World Clocks</h1>\n      <AddClockForm handleAddClock ={addClock} />\n      <div className=\"clocks\">\n        {clocks.map((c) => (\n          <Clock\n            timezone={c.timezone || undefined}\n            key={c.id}\n            id={c.id}\n            deleteCallback={deleteClock}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}